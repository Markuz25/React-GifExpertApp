{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAeA,OACI,mCACA,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBC,QAAQC,IAAI,gBACZV,GAAc,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACvCR,EAAc,MAOlB,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAYZL,GAZY,4CAAH,sDCEPQ,EAAc,SAAC,GAAmB,EAAlBL,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCFHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAK,GACLc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACLzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAGtB,CAACrB,IAEGsB,EDbgBK,CAAa3B,GAA7BO,EAAP,EAAOA,KAAKc,EAAZ,EAAYA,QAEZ,OACI,qCACA,oBAAIJ,UAAU,wCAAd,SAAuDjB,IACtDqB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEQV,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEcfiB,EAzBM,WAGjB,MAAoC5C,mBAAS,CAAC,iBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADPA,Y,MCb7B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.be8299c1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length>2){\r\n            console.log('Submit Hecho');\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZU0ogO0xJrPUCCqZ7q8Pdt9Y6qRo3251`;\r\n    const resp = await fetch(URL);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__flash\">{category}</h3>\r\n        {loading && <p>Loading</p> }\r\n        <div className=\"card-grid\">\r\n            {\r\n                data.map(img=>(\r\n                    <GifGridItem\r\n                    key= {img.id}\r\n                    {...img} \r\n                    />\r\n                ))\r\n            }  \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n         getGifs(category)\r\n             .then(imgs =>{\r\n                 setState({\r\n                     data:imgs,\r\n                     loading:false\r\n                 })\r\n             })\r\n    }, [category]);\r\n\r\n    return state; \r\n\r\n\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n\r\n    const [categories, setCategories] = useState(['Kimi no Nawa']);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category=>(\r\n                        <GifGrid\r\n                        key={category}\r\n                        category = {category}\r\n                        />                   \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}